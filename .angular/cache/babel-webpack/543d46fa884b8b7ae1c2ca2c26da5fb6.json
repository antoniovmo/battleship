{"ast":null,"code":"import _asyncToGenerator from \"/Users/tonyroot/Documents/iWork/Battleship/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\"; // Dependencies\n\nimport { Injectable } from '@angular/core'; // Firebase\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\nimport { getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup } from 'firebase/auth'; // Classes\n\nimport { User } from '../classes/user';\nimport { BehaviorSubject } from \"rxjs\";\nimport { doc, setDoc } from \"firebase/firestore\";\nlet AuthenticationService = class AuthenticationService {\n  constructor(databaseService, userService, router) {\n    this.databaseService = databaseService;\n    this.userService = userService;\n    this.router = router;\n    this.m_user_b_subject = new BehaviorSubject(this.m_user);\n  }\n\n  init_authentication() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.get_database_on_auth(user => {\n        if (user) {\n          _this.m_uid = user.uid;\n          _this.m_user_snapshot = _this.databaseService.m_data_base.collection(_this.databaseService.m_collections.users).doc(user.uid).get().then(r_user => {\n            _this.m_user = r_user;\n\n            _this.m_user_b_subject.next(_this.m_user);\n\n            if (!_this.m_user) console.log('unauthorized');\n          });\n        } else {\n          _this.router.navigate(['game/home']);\n        }\n      });\n    })();\n  }\n\n  sign_in_google() {\n    var _this2 = this;\n\n    const auth = getAuth();\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (p_user) {\n        _this2.m_user = yield _this2.databaseService.m_data_base.collection(_this2.databaseService.m_collections.users).doc(p_user.user.uid).get().then(r_user => {\n          if (!r_user.exists) {\n            console.log(p_user);\n            let r_provider = p_user.user.providerData[0];\n            let temp_user = new User(r_provider.displayName, r_provider.email, r_provider.photoURL, r_provider.providerId);\n\n            _this2.save_firestore_user(temp_user, p_user.user.uid);\n\n            return temp_user;\n          } else {\n            return r_user.data();\n          }\n        });\n\n        if (_this2.m_user) {\n          yield _this2.router.navigate(['game/home']);\n\n          _this2.m_user_b_subject.next(_this2.m_user);\n        } else {\n          return false;\n        }\n\n        return false;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(error => {\n      console.log(error);\n    });\n  }\n\n  save_firestore_user(r_user, r_uid) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield setDoc(doc(_this3.databaseService.m_data_base, _this3.databaseService.m_collections.users, r_uid), Object.assign({}, r_user));\n    })();\n  }\n\n  get_database_on_auth(m_function) {\n    const auth = getAuth();\n    return onAuthStateChanged(auth, m_function);\n  }\n\n  get_database_auth() {\n    this.databaseService.database_init();\n    return firebase.auth();\n  }\n\n  logout() {\n    this.router.navigate(['authentication/log-in']);\n    return this.get_database_auth().signOut();\n  }\n\n};\nAuthenticationService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthenticationService);\nexport { AuthenticationService };","map":{"version":3,"sources":["/Users/tonyroot/Documents/iWork/Battleship/src/app/services/authentication.service.ts"],"names":["__decorate","Injectable","firebase","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithPopup","User","BehaviorSubject","doc","setDoc","AuthenticationService","constructor","databaseService","userService","router","m_user_b_subject","m_user","init_authentication","get_database_on_auth","user","m_uid","uid","m_user_snapshot","m_data_base","collection","m_collections","users","get","then","r_user","next","console","log","navigate","sign_in_google","auth","provider","p_user","exists","r_provider","providerData","temp_user","displayName","email","photoURL","providerId","save_firestore_user","data","catch","error","r_uid","Object","assign","m_function","get_database_auth","database_init","logout","signOut","providedIn"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\n// Dependencies\nimport { Injectable } from '@angular/core';\n// Firebase\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\nimport { getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup } from 'firebase/auth';\n// Classes\nimport { User } from '../classes/user';\nimport { BehaviorSubject } from \"rxjs\";\nimport { doc, setDoc } from \"firebase/firestore\";\nlet AuthenticationService = class AuthenticationService {\n    constructor(databaseService, userService, router) {\n        this.databaseService = databaseService;\n        this.userService = userService;\n        this.router = router;\n        this.m_user_b_subject = new BehaviorSubject(this.m_user);\n    }\n    async init_authentication() {\n        this.get_database_on_auth((user) => {\n            if (user) {\n                this.m_uid = user.uid;\n                this.m_user_snapshot = this.databaseService.m_data_base\n                    .collection(this.databaseService.m_collections.users).doc(user.uid).get()\n                    .then((r_user) => {\n                    this.m_user = r_user;\n                    this.m_user_b_subject.next(this.m_user);\n                    if (!this.m_user)\n                        console.log('unauthorized');\n                });\n            }\n            else {\n                this.router.navigate(['game/home']);\n            }\n        });\n    }\n    sign_in_google() {\n        const auth = getAuth();\n        const provider = new GoogleAuthProvider();\n        signInWithPopup(auth, provider).then(async (p_user) => {\n            this.m_user = await this.databaseService.m_data_base.collection(this.databaseService.m_collections.users).doc(p_user.user.uid)\n                .get()\n                .then((r_user) => {\n                if (!r_user.exists) {\n                    console.log(p_user);\n                    let r_provider = p_user.user.providerData[0];\n                    let temp_user = new User(r_provider.displayName, r_provider.email, r_provider.photoURL, r_provider.providerId);\n                    this.save_firestore_user(temp_user, p_user.user.uid);\n                    return temp_user;\n                }\n                else {\n                    return r_user.data();\n                }\n            });\n            if (this.m_user) {\n                await this.router.navigate(['game/home']);\n                this.m_user_b_subject.next(this.m_user);\n            }\n            else {\n                return false;\n            }\n            return false;\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n    async save_firestore_user(r_user, r_uid) {\n        await setDoc(doc(this.databaseService.m_data_base, this.databaseService.m_collections.users, r_uid), Object.assign({}, r_user));\n    }\n    get_database_on_auth(m_function) {\n        const auth = getAuth();\n        return onAuthStateChanged(auth, m_function);\n    }\n    get_database_auth() {\n        this.databaseService.database_init();\n        return firebase.auth();\n    }\n    logout() {\n        this.router.navigate(['authentication/log-in']);\n        return this.get_database_auth().signOut();\n    }\n};\nAuthenticationService = __decorate([\n    Injectable({\n        providedIn: 'root',\n    })\n], AuthenticationService);\nexport { AuthenticationService };\n"]},"metadata":{},"sourceType":"module"}