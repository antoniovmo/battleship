{"ast":null,"code":"import _asyncToGenerator from \"/Users/tonyroot/Documents/iWork/Battleship/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Firebase\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\nimport { getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup } from 'firebase/auth'; // Classes\n\nimport { User } from '../classes/user';\nimport { BehaviorSubject } from \"rxjs\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./database.service\";\nimport * as i2 from \"./user.service\";\nimport * as i3 from \"@angular/router\";\nexport class AuthenticationService {\n  constructor(databaseService, userService, router) {\n    this.databaseService = databaseService;\n    this.userService = userService;\n    this.router = router;\n    this.m_user_b_subject = new BehaviorSubject(this.m_user);\n  }\n\n  init_authentication() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.get_database_on_auth(user => {\n        if (user) {\n          _this.m_uid = user.uid;\n          _this.m_user_snapshot = _this.databaseService.m_data_base.collection(_this.databaseService.m_collections.users).doc(user.uid).get().then(r_user => {\n            _this.m_user = r_user;\n\n            _this.m_user_b_subject.next(_this.m_user);\n\n            if (!_this.m_user) console.log('unauthorazide');\n          });\n        } else {\n          _this.router.navigate(['game/home']);\n        }\n      });\n    })();\n  }\n\n  save_firestore_user(r_user, r_uid) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield setDoc(doc(_this2.databaseService.m_data_base, _this2.databaseService.m_collections.users, r_uid), Object.assign({}, r_user));\n    })();\n  }\n\n  get_database_on_auth(m_function) {\n    const auth = getAuth();\n    return onAuthStateChanged(auth, m_function);\n  }\n\n  get_database_auth() {\n    this.databaseService.database_init();\n    return firebase.auth();\n  }\n\n  sign_in_google() {\n    var _this3 = this;\n\n    const auth = getAuth();\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (user) {\n        _this3.m_user = yield _this3.databaseService.m_data_base.collection(_this3.databaseService.m_collections.users).doc(user.user.uid).get().then(r_user => {\n          if (!r_user.exists) {\n            let r_provider = r_user.providerData[0];\n            let temp_user = new User(r_provider.displayName, r_provider.email, r_provider.photoURL, r_provider.providerId);\n\n            _this3.save_firestore_user(temp_user, r_user.uid);\n\n            return temp_user;\n          } else {\n            return r_user.data();\n          }\n        });\n\n        if (_this3.m_user) {\n          _this3.m_user_b_subject.next(_this3.m_user);\n\n          _this3.router.navigate(['game/home']);\n        } else {\n          return false;\n        }\n\n        return false;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(error => {\n      console.log(error);\n    });\n  }\n\n  logout() {\n    this.router.navigate(['authentication/log-in']);\n    return this.get_database_auth().signOut();\n  }\n\n}\n\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject(i1.DatabaseService), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i3.Router));\n};\n\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/tonyroot/Documents/iWork/Battleship/src/app/services/authentication.service.ts"],"names":["firebase","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithPopup","User","BehaviorSubject","doc","setDoc","i0","i1","i2","i3","AuthenticationService","constructor","databaseService","userService","router","m_user_b_subject","m_user","init_authentication","get_database_on_auth","user","m_uid","uid","m_user_snapshot","m_data_base","collection","m_collections","users","get","then","r_user","next","console","log","navigate","save_firestore_user","r_uid","Object","assign","m_function","auth","get_database_auth","database_init","sign_in_google","provider","exists","r_provider","providerData","temp_user","displayName","email","photoURL","providerId","data","catch","error","logout","signOut","ɵfac","AuthenticationService_Factory","t","ɵɵinject","DatabaseService","UserService","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["// Firebase\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\nimport { getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup } from 'firebase/auth';\n// Classes\nimport { User } from '../classes/user';\nimport { BehaviorSubject } from \"rxjs\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./database.service\";\nimport * as i2 from \"./user.service\";\nimport * as i3 from \"@angular/router\";\nexport class AuthenticationService {\n    constructor(databaseService, userService, router) {\n        this.databaseService = databaseService;\n        this.userService = userService;\n        this.router = router;\n        this.m_user_b_subject = new BehaviorSubject(this.m_user);\n    }\n    async init_authentication() {\n        this.get_database_on_auth((user) => {\n            if (user) {\n                this.m_uid = user.uid;\n                this.m_user_snapshot = this.databaseService.m_data_base\n                    .collection(this.databaseService.m_collections.users).doc(user.uid).get()\n                    .then((r_user) => {\n                    this.m_user = r_user;\n                    this.m_user_b_subject.next(this.m_user);\n                    if (!this.m_user)\n                        console.log('unauthorazide');\n                });\n            }\n            else {\n                this.router.navigate(['game/home']);\n            }\n        });\n    }\n    async save_firestore_user(r_user, r_uid) {\n        await setDoc(doc(this.databaseService.m_data_base, this.databaseService.m_collections.users, r_uid), Object.assign({}, r_user));\n    }\n    get_database_on_auth(m_function) {\n        const auth = getAuth();\n        return onAuthStateChanged(auth, m_function);\n    }\n    get_database_auth() {\n        this.databaseService.database_init();\n        return firebase.auth();\n    }\n    sign_in_google() {\n        const auth = getAuth();\n        const provider = new GoogleAuthProvider();\n        signInWithPopup(auth, provider).then(async (user) => {\n            this.m_user = await this.databaseService.m_data_base.collection(this.databaseService.m_collections.users).doc(user.user.uid)\n                .get()\n                .then((r_user) => {\n                if (!r_user.exists) {\n                    let r_provider = r_user.providerData[0];\n                    let temp_user = new User(r_provider.displayName, r_provider.email, r_provider.photoURL, r_provider.providerId);\n                    this.save_firestore_user(temp_user, r_user.uid);\n                    return temp_user;\n                }\n                else {\n                    return r_user.data();\n                }\n            });\n            if (this.m_user) {\n                this.m_user_b_subject.next(this.m_user);\n                this.router.navigate(['game/home']);\n            }\n            else {\n                return false;\n            }\n            return false;\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n    logout() {\n        this.router.navigate(['authentication/log-in']);\n        return this.get_database_auth().signOut();\n    }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) { return new (t || AuthenticationService)(i0.ɵɵinject(i1.DatabaseService), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i3.Router)); };\nAuthenticationService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthenticationService, factory: AuthenticationService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}